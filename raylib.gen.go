// Code generated by go generate ./...; DO NOT EDIT.

package raylib

import "github.com/judah-caruso/ffi-embeded"

var (
	tPixelFormat         = ucint
	tPixelFormatPtr      = ptr
	tCameraProjection    = ucint
	tCameraProjectionPtr = ptr
	tVector2             = ffi.NewType(&float, &float)
	tVector2Ptr          = ptr
	tVector3             = ffi.NewType(&float, &float, &float)
	tVector3Ptr          = ptr
	tVector4             = ffi.NewType(&float, &float, &float, &float)
	tVector4Ptr          = ptr
	tQuaternion          = tVector4
	tQuaternionPtr       = ptr
	tColor               = ffi.NewType(&uchar, &uchar, &uchar, &uchar)
	tColorPtr            = ptr
	tRectangle           = ffi.NewType(&float, &float, &float, &float)
	tRectanglePtr        = ptr
	tImage               = ffi.NewType(&ptr, &cint, &cint, &cint, &tPixelFormat)
	tImagePtr            = ptr
	tCamera3D            = ffi.NewType(&tVector3, &tVector3, &tVector3, &float, &tCameraProjection)
	tCamera3DPtr         = ptr
	tCamera              = tCamera3D
	tCameraPtr           = ptr
	tCamera2D            = ffi.NewType(&tVector2, &tVector2, &float, &float)
	tCamera2DPtr         = ptr
	tTexture             = ffi.NewType(&ucint, &cint, &cint, &cint, &cint)
	tTexturePtr          = ptr
	tTexture2D           = tTexture
	tTexture2DPtr        = ptr
	tTextureCubemap      = tTexture
	tTextureCubemapPtr   = ptr
	tRenderTexture       = ffi.NewType(&ucint, &tTexture, &tTexture)
	tRenderTexturePtr    = ptr
	tRenderTexture2D     = tRenderTexture
	tRenderTexture2DPtr  = ptr
	tShader              = ffi.NewType(&ucint, &ptr)
	tShaderPtr           = ptr
)
